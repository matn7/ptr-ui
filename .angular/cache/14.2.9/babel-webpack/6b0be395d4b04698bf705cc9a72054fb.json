{"ast":null,"code":"import { DaysService } from \"../days.service\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DatePipe } from \"@angular/common\";\nimport { AuthenticationService } from \"../../auth/authentication.service\";\nimport { ErrorService } from \"../../services/data/error.service\";\nimport { TimeService } from \"../../services/data/time.service\";\nimport { START_DATE_PATTERN, POSTED_ON_PATTERN, DETAIL_DATE_FORMAT, DATE_FORMAT, MADE_CODES } from \"../../app.constants\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../days.service\";\nimport * as i3 from \"../../auth/authentication.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../services/data/error.service\";\nimport * as i6 from \"../../services/data/time.service\";\nimport * as i7 from \"../../shared/input/input.component\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/card\";\n\nfunction DaysEditComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function DaysEditComponent_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDelete());\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let DaysEditComponent = /*#__PURE__*/(() => {\n  class DaysEditComponent {\n    constructor(route, daysService, authService, datepipe, router, errorService, timeService) {\n      this.route = route;\n      this.daysService = daysService;\n      this.authService = authService;\n      this.datepipe = datepipe;\n      this.router = router;\n      this.errorService = errorService;\n      this.timeService = timeService;\n      this.editMode = false;\n      this.made_codes = MADE_CODES;\n    }\n\n    ngOnInit() {\n      this.username = this.authService.getAuthenticatedUser();\n      this.route.params.subscribe(params => {\n        this.id = +params[\"id\"];\n        this.editMode = params[\"id\"] != null;\n      });\n\n      if (!this.editMode) {\n        this.route.params.subscribe(params => {\n          this.day = +params[\"day\"];\n          this.month = +params[\"month\"];\n          this.year = +params[\"year\"];\n        }, error => {\n          this.errorService.displayMessage(error, this.returnUrl);\n        });\n\n        if (this.timeService.checkDateInFuture(this.year, this.month, this.day)) {\n          this.redirectMsg();\n          this.router.navigate([this.returnUrl]);\n        }\n\n        this.startDate = this.datepipe.transform(new Date(this.year, this.month - 1, this.day), START_DATE_PATTERN);\n        this.postedOn = this.datepipe.transform(new Date(), POSTED_ON_PATTERN);\n      }\n\n      this.date = new Date();\n      this.month = this.date.getMonth() + 1;\n      this.year = this.date.getFullYear();\n      this.returnUrl = \"/days/\" + this.year + \"/\" + this.month + \"/\" + this.day;\n      this.initForm(this.startDate, this.postedOn);\n    }\n\n    onSubmit() {\n      if (this.editMode) {\n        this.daysService.updateDays(this.username, this.id, this.daysForm.value).subscribe(response => {\n          this.router.navigate([\"/days/\" + +response[\"id\"] + \"/view\"]);\n        }, error => {\n          this.errorService.displayMessage(error, this.returnUrl);\n        });\n      } else {\n        this.daysService.createDays(this.username, this.daysForm.value).subscribe(response => {\n          this.router.navigate([\"/days/\" + +response[\"id\"] + \"/view\"]);\n        }, error => {\n          this.errorService.displayMessage(error, this.returnUrl);\n        });\n      }\n    }\n\n    onDelete() {\n      if (this.editMode && confirm(\"Press a button!\\nEither OK or Cancel.\")) {\n        this.daysService.deleteDays(this.username, this.id).subscribe(response => {\n          this.router.navigate([\"/important/\" + this.year + \"/\" + this.month]);\n        }, error => {\n          this.errorService.displayMessage(error, this.returnUrl);\n        });\n      }\n    }\n\n    redirectMsg() {\n      this.errorService.dateInFutureMessage();\n    }\n\n    initForm(startDate, postedOn) {\n      const id = this.id;\n      const body = this.body;\n      const rateDay = this.rateDay;\n      this.daysForm = new FormGroup({\n        id: new FormControl(id),\n        body: new FormControl(body, [Validators.required, Validators.maxLength(255)]),\n        rateDay: new FormControl(rateDay, Validators.required),\n        startDate: new FormControl(startDate, Validators.required),\n        postedOn: new FormControl(postedOn, Validators.required)\n      });\n\n      if (this.editMode) {\n        this.daysService.getDays(this.username, this.id).subscribe(days => {\n          this.daysForm.setValue({\n            \"id\": this.id,\n            \"body\": days.body,\n            \"rateDay\": this.made_codes[days.rateDay],\n            \"startDate\": days.startDate,\n            \"postedOn\": this.datepipe.transform(new Date(), DETAIL_DATE_FORMAT)\n          });\n        }, error => {\n          this.errorService.displayMessage(error, this.returnUrl);\n        });\n        this.startDate = this.datepipe.transform(new Date(), DATE_FORMAT);\n        this.postedOn = this.datepipe.transform(new Date(), DETAIL_DATE_FORMAT);\n      }\n    }\n\n  }\n\n  DaysEditComponent.ɵfac = function DaysEditComponent_Factory(t) {\n    return new (t || DaysEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.DaysService), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i5.ErrorService), i0.ɵɵdirectiveInject(i6.TimeService));\n  };\n\n  DaysEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DaysEditComponent,\n    selectors: [[\"app-days-edit\"]],\n    decls: 9,\n    vars: 7,\n    consts: [[1, \"pandatronik-mat-card\"], [3, \"formGroup\", \"ngSubmit\"], [\"controlType\", \"textarea\", \"placeholder\", \"body\", \"title\", \"body\", \"label\", \"Body\", 3, \"control\"], [\"controlType\", \"select\", \"label\", \"Rate Day\", 3, \"control\"], [\"controlType\", \"hidden\", \"inputType\", \"hidden\", \"hidden\", \"true\", 3, \"control\"], [\"type\", \"submit\", \"color\", \"primary\", \"mat-raised-button\", \"\", 3, \"disabled\"], [\"type\", \"button\", \"color\", \"warn\", \"mat-raised-button\", \"\", \"ng-confirm-click\", \"Confirm unfavorite?\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"color\", \"warn\", \"mat-raised-button\", \"\", \"ng-confirm-click\", \"Confirm unfavorite?\", 3, \"click\"]],\n    template: function DaysEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function DaysEditComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(2, \"app-input\", 2)(3, \"app-input\", 3)(4, \"app-input\", 4)(5, \"app-input\", 4);\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵtext(7, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, DaysEditComponent_button_8_Template, 2, 0, \"button\", 6);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.daysForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.daysForm.get(\"body\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.daysForm.get(\"rateDay\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.daysForm.get(\"startDate\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.daysForm.get(\"postedOn\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.daysForm.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n      }\n    },\n    dependencies: [i4.NgIf, i7.InputComponent, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.FormGroupDirective, i9.MatButton, i10.MatCard],\n    encapsulation: 2\n  });\n  return DaysEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}