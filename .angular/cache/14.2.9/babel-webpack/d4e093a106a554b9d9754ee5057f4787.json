{"ast":null,"code":"import { Observable } from 'rxjs';\nimport 'rxjs/add/observable/timer';\nimport { MatDialog } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/checkbox\";\nimport * as i5 from \"@angular/material/radio\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/chips\";\nimport * as i14 from \"@angular/material/progress-spinner\";\nimport * as i15 from \"@angular/material/tooltip\";\n\nfunction HomeComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Some details ...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const color_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", color_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(color_r7.name);\n  }\n}\n\nfunction HomeComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" The username field is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_mat_chip_54_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 25);\n    i0.ɵɵlistener(\"click\", function HomeComponent_mat_chip_54_Template_mat_chip_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const category_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.selectCategory(category_r8));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"selected\", category_r8.selected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r8.name);\n  }\n}\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(dialog) {\n      this.dialog = dialog;\n      this.isChecked = true;\n      this.minDate = new Date(2020, 1, 1);\n      this.maxDate = new Date(2020, 8, 1);\n      this.categories = [{\n        name: 'Beginner'\n      }, {\n        name: 'Intermediate'\n      }, {\n        name: 'Advanced'\n      }];\n      this.colors = [{\n        id: 1,\n        name: 'Red'\n      }, {\n        id: 2,\n        name: 'Green'\n      }, {\n        id: 3,\n        name: 'Blue'\n      }];\n      this.color = 2;\n      this.progress = 0;\n      this.isLoading = false;\n      this.timer = setInterval(() => {\n        this.progress++;\n        if (this.progress == 100) clearInterval(this.timer);\n      }, 20);\n      this.isLoading = true;\n      this.getCourses().subscribe(x => this.isLoading = false);\n    }\n\n    ngOnInit() {}\n\n    onChange($event) {\n      console.log($event);\n    }\n\n    selectCategory(category) {\n      this.categories.filter(c => c != category).forEach(c => c['selected'] = false);\n      category.selected = !category.selected;\n    }\n\n    getCourses() {\n      return Observable.timer(2000);\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.MatDialog));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 66,\n    vars: 12,\n    consts: [[3, \"value\", \"checked\", \"change\"], [\"showDetails\", \"\"], [4, \"ngIf\"], [\"value\", \"1\"], [\"value\", \"0\", 3, \"checked\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"ngModel\", \"\", \"name\", \"username\", \"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Username\", \"required\", \"\"], [\"username\", \"ngModel\"], [\"matSuffix\", \"\"], [\"matPrefix\", \"\"], [\"matInput\", \"\", \"matTextareaAutosize\", \"\", \"rows\", \"2\"], [\"matInput\", \"\", 3, \"min\", \"max\", \"matDatepicker\", \"focus\"], [\"matSuffix\", \"\", 3, \"for\"], [\"birthdate\", \"\"], [\"mat-button\", \"\"], [\"color\", \"primary\", \"mat-raised-button\", \"\"], [\"color\", \"accent\", \"mat-raised-button\", \"\"], [\"color\", \"warn\", \"mat-raised-button\", \"\"], [\"color\", \"primary\", \"mat-fab\", \"\"], [\"selected\", \"true\", \"color\", \"accent\"], [3, \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mode\", \"determinate\", 3, \"value\"], [\"matTooltip\", \"Here is my tooltip\", \"matTooltipPosition\", \"right\"], [3, \"value\"], [3, \"selected\", \"click\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r11 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"mat-checkbox\", 0, 1);\n        i0.ɵɵlistener(\"change\", function HomeComponent_Template_mat_checkbox_change_0_listener($event) {\n          return ctx.onChange($event);\n        });\n        i0.ɵɵtext(2, \"Show details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, HomeComponent_div_3_Template, 2, 0, \"div\", 2);\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵelementStart(5, \"mat-radio-group\")(6, \"mat-radio-button\", 3);\n        i0.ɵɵtext(7, \"Male\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-radio-button\", 4);\n        i0.ɵɵtext(9, \"Femail\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(10, \"br\")(11, \"br\");\n        i0.ɵɵelementStart(12, \"mat-select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_mat_select_ngModelChange_12_listener($event) {\n          return ctx.color = $event;\n        });\n        i0.ɵɵtemplate(13, HomeComponent_mat_option_13_Template, 2, 2, \"mat-option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\")(15, \"br\");\n        i0.ɵɵelementStart(16, \"form\")(17, \"mat-form-field\");\n        i0.ɵɵelement(18, \"input\", 7, 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"span\", 9);\n        i0.ɵɵtext(21, \"@domain.com\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"span\", 10);\n        i0.ɵɵtext(23, \"admin.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-hint\");\n        i0.ɵɵtext(25, \"Type a unique username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, HomeComponent_mat_error_26_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"br\")(28, \"br\");\n        i0.ɵɵelementStart(29, \"mat-form-field\");\n        i0.ɵɵelement(30, \"textarea\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-form-field\")(32, \"input\", 12);\n        i0.ɵɵlistener(\"focus\", function HomeComponent_Template_input_focus_32_listener() {\n          i0.ɵɵrestoreView(_r11);\n\n          const _r5 = i0.ɵɵreference(35);\n\n          return i0.ɵɵresetView(_r5.open());\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"mat-datepicker-toggle\", 13)(34, \"mat-datepicker\", null, 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"mat-icon\");\n        i0.ɵɵtext(37, \"add_alert\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"button\", 15);\n        i0.ɵɵtext(39, \"Button 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"button\", 16);\n        i0.ɵɵtext(41, \"Primary\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"button\", 17);\n        i0.ɵɵtext(43, \"Accent\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"button\", 18);\n        i0.ɵɵtext(45, \"Warn\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"button\", 19)(47, \"mat-icon\");\n        i0.ɵɵtext(48, \"check\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(49, \"mat-chip-list\")(50, \"mat-chip\", 20);\n        i0.ɵɵtext(51, \"One\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"mat-chip\");\n        i0.ɵɵtext(53, \"Two\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(54, HomeComponent_mat_chip_54_Template, 2, 2, \"mat-chip\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(55, \"mat-progress-spinner\", 22);\n        i0.ɵɵelementStart(56, \"span\", 23);\n        i0.ɵɵtext(57, \"Some text\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"h1\");\n        i0.ɵɵtext(59, \"Heading 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"h2\");\n        i0.ɵɵtext(61, \"Heading 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"p\");\n        i0.ɵɵtext(63, \" majkowy majkowy\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(64, \"br\")(65, \"br\");\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        const _r3 = i0.ɵɵreference(19);\n\n        const _r5 = i0.ɵɵreference(35);\n\n        i0.ɵɵproperty(\"checked\", ctx.isChecked);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", _r0.checked);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"checked\", ctx.isChecked);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.color);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.colors);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.errors.required);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"min\", ctx.minDate)(\"max\", ctx.maxDate)(\"matDatepicker\", _r5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r5);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.progress);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.MatCheckbox, i5.MatRadioGroup, i5.MatRadioButton, i6.MatError, i6.MatFormField, i6.MatHint, i6.MatPrefix, i6.MatSuffix, i7.MatSelect, i8.MatOption, i9.MatInput, i10.MatDatepicker, i10.MatDatepickerInput, i10.MatDatepickerToggle, i11.MatIcon, i12.MatButton, i13.MatChipList, i13.MatChip, i14.MatProgressSpinner, i15.MatTooltip]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}