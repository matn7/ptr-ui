{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { API_URL, API_VERSION } from \"../app.constants\";\nimport { HandleErrorsService } from \"../services/handle-errors.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../services/handle-errors.service\";\nexport let RegistrationService = /*#__PURE__*/(() => {\n  class RegistrationService {\n    constructor(http, handleErrorService) {\n      this.http = http;\n      this.handleErrorService = handleErrorService;\n    }\n\n    createNewUser(userEntity) {\n      return this.http.post(`${API_URL}/${API_VERSION}/register`, userEntity).catch(this.handleErrorService.handleError);\n    }\n\n    activateUser(id, token) {\n      return this.http.post(`${API_URL}/${API_VERSION}/activatenewuser?id=${id}&token=${token}`, id).catch(this.handleErrorService.handleError);\n    }\n\n    resetPassword(email) {\n      return this.http.post(`${API_URL}/${API_VERSION}/forgotpassword`, email).catch(this.handleErrorService.handleError);\n    }\n\n    newPassword(id, token, password) {\n      return this.http.post(`${API_URL}/${API_VERSION}/changepassword?id=${id}&token=${token}`, password).catch(this.handleErrorService.handleError);\n    }\n\n  }\n\n  RegistrationService.ɵfac = function RegistrationService_Factory(t) {\n    return new (t || RegistrationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HandleErrorsService));\n  };\n\n  RegistrationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RegistrationService,\n    factory: RegistrationService.ɵfac,\n    providedIn: \"root\"\n  });\n  return RegistrationService;\n})();","map":null,"metadata":{},"sourceType":"module"}