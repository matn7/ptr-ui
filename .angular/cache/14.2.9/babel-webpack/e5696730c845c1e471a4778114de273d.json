{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Input } from \"@angular/core\";\nimport { YELLOW_COMPLETION_STYLES, GREEN_COMPLETION_STYLES, BLUE_COMPLETION_STYLES } from \"./app.constants\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthenticationService } from \"./auth/authentication.service\";\nimport { TimeService } from \"./services/data/time.service\";\nimport { ErrorService } from \"./services/data/error.service\";\nimport { WeekDay } from \"@angular/common\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nlet TaskIndexNewComponent = class TaskIndexNewComponent {\n  constructor(route, taskServiceInterface, authService, timeService, router, errorService, target, indexData) {\n    this.route = route;\n    this.taskServiceInterface = taskServiceInterface;\n    this.authService = authService;\n    this.timeService = timeService;\n    this.router = router;\n    this.errorService = errorService;\n    this.index = 0;\n    this.yellow_completion_styles = YELLOW_COMPLETION_STYLES;\n    this.green_completion_styles = GREEN_COMPLETION_STYLES;\n    this.blue_completion_styles = BLUE_COMPLETION_STYLES;\n    this.target = target;\n    this.indexData = indexData;\n  }\n\n  ngOnInit() {\n    // Get date from URL\n    this.route.params.subscribe(params => {\n      this.month = +params[\"month\"];\n      this.year = +params[\"year\"];\n    }); // Prepare day number and week day arrays\n\n    this.prepareMonthDaysArray();\n    this.today = new Date().getDay();\n    this.date = new Date();\n    this.today = this.timeService.getActiveDay(this.month, this.year, this.date);\n    this.username = this.authService.getAuthenticatedUser();\n    this.returnUrl = \"/\" + this.target + \"/\" + this.year + \"/\" + this.month;\n    this.taskServiceInterface.getTaskIndexData(this.username, this.target, this.year, this.month).subscribe(data => {\n      this.indexData = data;\n      this.processData();\n    }, error => {\n      this.errorService.displayMessage(error, this.returnUrl);\n    });\n    this.initForm();\n  }\n\n  onSubmit() {\n    this.year = this.selectDate.value.selectYear;\n    this.month = this.selectDate.value.selectMonth;\n    this.prepareMonthDaysArray(); // clear index data\n\n    this.today = this.timeService.getActiveDay(this.month, this.year, this.date);\n    this.taskServiceInterface.getTaskIndexData(this.username, this.target, this.year, this.month).subscribe(data => {\n      this.indexData = data;\n      this.processData();\n    }, error => {\n      this.errorService.displayMessage(error, this.returnUrl);\n    });\n    this.router.navigate([\"/\" + this.target + \"/\" + this.year + \"/\" + this.month]);\n  }\n\n  prepareMonthDaysArray() {\n    this.lengthOfMonth = new Date(this.year, this.month, 0).getDate();\n    this.monthDaysArr = Array(this.lengthOfMonth).fill(0).map((x, i) => i + 1);\n    this.weekDayArr = Array(this.lengthOfMonth).fill(0).map((x, i) => WeekDay[new Date(this.year, this.month - 1, i + 1).getDay()]);\n  }\n\n  onAddExtraordinaryClick(year, month, day) {\n    this.router.navigate([\"/extraordinary/\" + year + \"/\" + month + \"/\" + day + \"/new\"]);\n  }\n\n  onEditExtraordinaryClick(id) {\n    this.router.navigate([\"/extraordinary/\" + id + \"/edit\"]);\n  }\n\n  onAddNewClick(target, num, year, month, day) {\n    this.router.navigate([\"/\" + target + \"/\" + num + \"/\" + year + \"/\" + month + \"/\" + day + \"/new\"], {\n      replaceUrl: false\n    });\n  }\n\n  onEditClick(target, num, id) {\n    this.router.navigate([\"/\" + target + \"/\" + num + \"/\" + id + \"/edit\"]);\n  }\n\n  onAddDayClick(year, month, day) {\n    this.router.navigate([\"/days/\" + year + \"/\" + month + \"/\" + day + \"/new\"]);\n  }\n\n  onEditDayClick(id) {\n    this.router.navigate([\"/days/\" + id + \"/edit\"]);\n  }\n\n  initForm() {\n    const selectYear = this.year;\n    const selectMonth = this.month;\n    this.selectDate = new FormGroup({\n      selectYear: new FormControl(selectYear, Validators.required),\n      selectMonth: new FormControl(selectMonth, Validators.required)\n    });\n  }\n\n};\n\n__decorate([Input(), __metadata(\"design:type\", Number)], TaskIndexNewComponent.prototype, \"index\", void 0);\n\nTaskIndexNewComponent = __decorate([Directive(), __metadata(\"design:paramtypes\", [ActivatedRoute, Object, AuthenticationService, TimeService, Router, ErrorService, String, Array])], TaskIndexNewComponent);\nexport { TaskIndexNewComponent };","map":null,"metadata":{},"sourceType":"module"}