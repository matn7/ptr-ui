{"ast":null,"code":"import { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DatePipe } from \"@angular/common\";\nimport { ExtraordinaryService } from \"../extraordinary.service\";\nimport { AuthenticationService } from \"../../auth/authentication.service\";\nimport { ErrorService } from \"../../services/data/error.service\";\nimport { TITLE_LENGTH_VALIDATOR, TITLE_REQUIRED_VALIDATOR, BODY_LENGTH_VALIDATOR, BODY_REQUIRED_VALIDATOR, DETAIL_DATE_FORMAT, DATE_FORMAT } from \"../../app.constants\";\nimport { TimeService } from \"src/app/services/data/time.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../extraordinary.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../auth/authentication.service\";\nimport * as i5 from \"src/app/services/data/time.service\";\nimport * as i6 from \"../../services/data/error.service\";\nimport * as i7 from \"../../shared/input/input.component\";\nimport * as i8 from \"@angular/forms\";\n\nfunction ExtraordinaryEditComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ExtraordinaryEditComponent_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDelete());\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ExtraordinaryEditComponent = /*#__PURE__*/(() => {\n  class ExtraordinaryEditComponent {\n    constructor(route, extraordinaryService, datepipe, authService, router, timeService, errorService) {\n      this.route = route;\n      this.extraordinaryService = extraordinaryService;\n      this.datepipe = datepipe;\n      this.authService = authService;\n      this.router = router;\n      this.timeService = timeService;\n      this.errorService = errorService;\n      this.editMode = false;\n      this.title_length_validator = TITLE_LENGTH_VALIDATOR;\n      this.title_required_validator = TITLE_REQUIRED_VALIDATOR;\n      this.body_length_validator = BODY_LENGTH_VALIDATOR;\n      this.body_required_validator = BODY_REQUIRED_VALIDATOR;\n    }\n\n    ngOnInit() {\n      this.username = this.authService.getAuthenticatedUser();\n      this.date = new Date();\n      this.month = this.date.getMonth() + 1;\n      this.year = this.date.getFullYear();\n      this.returnUrl = \"/important/\" + this.year + \"/\" + this.month;\n      this.route.params.subscribe(params => {\n        this.id = +params[\"id\"];\n        this.editMode = params[\"id\"] != null;\n      });\n\n      if (!this.editMode) {\n        this.route.params.subscribe(params => {\n          this.day = +params[\"day\"];\n          this.month = +params[\"month\"];\n          this.year = +params[\"year\"];\n          this.startDate = this.datepipe.transform(new Date(this.year, this.month - 1, this.day), DATE_FORMAT);\n          this.postedOn = this.datepipe.transform(new Date(), DETAIL_DATE_FORMAT);\n        }, error => {\n          this.errorService.displayMessage(error, this.returnUrl);\n        }); // Check for invalid date\n\n        if (this.timeService.checkDateInFuture(this.year, this.month, this.day)) {\n          this.errorService.dateInFutureMessage();\n          this.router.navigate([this.returnUrl]);\n        }\n      }\n\n      this.initForm(this.startDate, this.postedOn);\n    }\n\n    onSubmit() {\n      if (this.editMode) {\n        this.extraordinaryService.updateExtraordinary(this.username, this.id, this.extraordinaryForm.value).subscribe(response => {\n          this.router.navigate([\"/extraordinary/\" + +response[\"id\"] + \"/view\"]);\n        }, error => {\n          this.errorService.displayMessage(error, this.returnUrl);\n        });\n      } else {\n        this.extraordinaryService.createExtraordinary(this.username, this.extraordinaryForm.value).subscribe(response => {\n          this.router.navigate([\"/extraordinary/\" + +response[\"id\"] + \"/view\"]);\n        }, error => {\n          this.errorService.displayMessage(error, this.returnUrl);\n        });\n      }\n    }\n\n    onDelete() {\n      if (this.editMode && confirm(\"Press a button!\\nEither OK or Cancel.\")) {\n        this.extraordinaryService.deleteExtraordinary(this.username, this.id).subscribe(response => {\n          this.router.navigate([\"/important/\" + this.year + \"/\" + this.month]);\n        }, error => {\n          this.errorService.displayMessage(error, this.returnUrl);\n        });\n      }\n    }\n\n    initForm(startDate, postedOn) {\n      const id = this.id;\n      const title = this.title;\n      const body = this.body;\n      this.extraordinaryForm = new FormGroup({\n        id: new FormControl(id),\n        title: new FormControl(title, [Validators.required, Validators.maxLength(40)]),\n        body: new FormControl(body, [Validators.required, Validators.maxLength(255)]),\n        startDate: new FormControl(startDate, Validators.required),\n        postedOn: new FormControl(postedOn, Validators.required)\n      });\n\n      if (this.editMode) {\n        this.extraordinaryService.getExtraordinaryByid(this.username, this.id).subscribe(extra => {\n          this.extraordinaryForm.setValue({\n            \"id\": this.id,\n            \"title\": extra.title,\n            \"body\": extra.body,\n            \"startDate\": extra.startDate,\n            \"postedOn\": this.datepipe.transform(new Date(), DETAIL_DATE_FORMAT)\n          });\n        }, error => {\n          this.errorService.displayMessage(error, this.returnUrl);\n        });\n        this.startDate = this.datepipe.transform(new Date(), DATE_FORMAT);\n        this.postedOn = this.datepipe.transform(new Date(), DETAIL_DATE_FORMAT);\n      }\n    }\n\n  }\n\n  ExtraordinaryEditComponent.ɵfac = function ExtraordinaryEditComponent_Factory(t) {\n    return new (t || ExtraordinaryEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ExtraordinaryService), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.AuthenticationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i5.TimeService), i0.ɵɵdirectiveInject(i6.ErrorService));\n  };\n\n  ExtraordinaryEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExtraordinaryEditComponent,\n    selectors: [[\"app-extraordinary-edit\"]],\n    decls: 9,\n    vars: 7,\n    consts: [[1, \"pandatronik-mat-card\"], [3, \"formGroup\", \"ngSubmit\"], [\"controlType\", \"input\", \"placeholder\", \"title\", \"title\", \"title\", \"label\", \"Title\", 3, \"control\"], [\"controlType\", \"textarea\", \"placeholder\", \"body\", \"title\", \"body\", \"label\", \"Body\", 3, \"control\"], [\"controlType\", \"hidden\", \"inputType\", \"hidden\", \"hidden\", \"true\", 3, \"control\"], [\"type\", \"submit\", \"color\", \"primary\", \"mat-raised-button\", \"\", 3, \"disabled\"], [\"type\", \"button\", \"color\", \"warn\", \"mat-raised-button\", \"\", \"ng-confirm-click\", \"Confirm unfavorite?\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"color\", \"warn\", \"mat-raised-button\", \"\", \"ng-confirm-click\", \"Confirm unfavorite?\", 3, \"click\"]],\n    template: function ExtraordinaryEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ExtraordinaryEditComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(2, \"app-input\", 2)(3, \"app-input\", 3)(4, \"app-input\", 4)(5, \"app-input\", 4);\n        i0.ɵɵelementStart(6, \"button\", 5);\n        i0.ɵɵtext(7, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, ExtraordinaryEditComponent_button_8_Template, 2, 0, \"button\", 6);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.extraordinaryForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.extraordinaryForm.get(\"title\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.extraordinaryForm.get(\"body\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.extraordinaryForm.get(\"startDate\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"control\", ctx.extraordinaryForm.get(\"postedOn\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.extraordinaryForm.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n      }\n    },\n    dependencies: [i3.NgIf, i7.InputComponent, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.FormGroupDirective],\n    encapsulation: 2\n  });\n  return ExtraordinaryEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}